@model University.Models.Ente

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EnteID)

        <div class="form-group">
            @Html.LabelFor(model => model.NombreCompleto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NombreCompleto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NombreCompleto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SexoID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SexoID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SexoID, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.LabelFor(model => model.Polizas, htmlAttributes: new { @class = "control-label" })

        @{ int index = 0; }
        @{ViewData.Add("index", index);}

        <div id="polizasList" class="form-group">
            @foreach (var poliza in Model.Polizas)
            {
                ViewData["index"] = index;
                @Html.Partial("_FilaPoliza", poliza, ViewData) @*Se manda el ViewData porque este contiene el ModelState*@

                index += 1;
            }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-default" id="addPolicy">Agregar póliza</button>
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/Entes/Edit.js"></script>
}

@Html.Partial("_FilaPoliza", new University.Models.Poliza(), new ViewDataDictionary {
                            new KeyValuePair<string, object>("index", 0),
                            new KeyValuePair<string, object>("id", "input_template_")
                        })
